if [ -f "$LOCAL_SOURCE_DIR/build.gradle" ]; then
   echo "Building with gradle. $LOCAL_SOURCE_DIR/build.gradle found."

   pushd $LOCAL_SOURCE_DIR &> /dev/null

  if [ -z "$BUILDER_ARGS" ]; then
    export BUILDER_ARGS="build -x test"
    # TODO: Specify setting file with -c sss
  fi

  echo "Found gradle.build ... attempting to build with 'gradle -s ${BUILDER_ARGS}'"

  echo "Gradle version:"
  gradle --version

  # Execute the actual build
  gradle -s $BUILDER_ARGS

  ERR=$?
  if [ $ERR -ne 0 ]; then
    echo "Aborting due to error code $ERR from Gradle build"
    exit $ERR
  fi

  # Copy built artifacts (if any!) from the target/ directory
  # to the $DEPLOY_DIR directory for later deployment
  copy_artifacts build/libs


  # clean up
  gradle clean
#  if [ -d "$HOME/.m2/repository" ]; then
#    rm -r "$HOME/.m2/repository"
#  fi

  popd &> /dev/null
fi

# Copy (probably binary) artifacts from the deployments/
# directory to the $DEPLOY_DIR directory for later deployment
# copy_artifacts "deployments"

# if [ -d $LOCAL_SOURCE_DIR/configuration ]; then
#   echo "Copying config files from project..."
#   cp -v $LOCAL_SOURCE_DIR/configuration/* $ARTIFACTS_HOME
# fi

# As SpringBoot you should only have 1 fat jar
if [ $(ls /opt/openshift/*.jar | wc -l) -eq 1 ]; then
  mv /opt/openshift/*.jar /opt/openshift/app.jar
  [ ! -f /opt/openshift/app.jar ] && echo "Application could not be properly built." && exit 1
  echo "Application jar file is located in /opt/openshift/app.jar"
else
  exit 1
fi


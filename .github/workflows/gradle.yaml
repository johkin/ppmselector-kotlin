# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  REGISTRY_HOSTNAME: eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}
  IMAGE: ppmselector

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew bootBuildImage --imageName=$REGISTRY_HOSTNAME/$IMAGE:${{ github.sha }}

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '314.0.0'
          service_account_key: ${{ secrets.GCP_SA }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push "$REGISTRY_HOSTNAME"/"$IMAGE":${{ github.sha }}
          docker tag "$REGISTRY_HOSTNAME"/"$IMAGE":${{ github.sha }} "$REGISTRY_HOSTNAME"/"$IMAGE":latest
          docker push "$REGISTRY_HOSTNAME"/"$IMAGE":latest
